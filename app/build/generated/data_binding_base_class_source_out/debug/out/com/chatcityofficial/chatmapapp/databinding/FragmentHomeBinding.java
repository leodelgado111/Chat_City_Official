// Generated by view binder compiler. Do not edit!
package com.chatcityofficial.chatmapapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.compose.ui.platform.ComposeView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.chatcityofficial.chatmapapp.R;
import com.chatcityofficial.chatmapapp.ui.compose.components.ThemedLocationContainerView;
import com.mapbox.maps.MapView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout defaultViewContainer;

  @NonNull
  public final ImageView floating5leftarrow;

  @NonNull
  public final ImageView floating5rightarrow;

  @NonNull
  public final ImageView floating5strongergradient;

  @NonNull
  public final ImageView floating5strongergradient2;

  @NonNull
  public final ImageView floating5whitebase;

  @NonNull
  public final ImageView floating5whitebase2;

  @NonNull
  public final ThemedLocationContainerView locationContainer;

  @NonNull
  public final ImageView logoImageView;

  @NonNull
  public final View mapClickInterceptor;

  @NonNull
  public final MapView mapView;

  @NonNull
  public final ComposeView postButtonComposeView;

  @NonNull
  public final ComposeView postButtonComposeView2;

  @NonNull
  public final ImageView searchBackButton;

  @NonNull
  public final ImageView searchClearButton;

  @NonNull
  public final LinearLayout searchContainer;

  @NonNull
  public final EditText searchEditText;

  @NonNull
  public final RecyclerView searchResultsRecyclerView;

  private FragmentHomeBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout defaultViewContainer, @NonNull ImageView floating5leftarrow,
      @NonNull ImageView floating5rightarrow, @NonNull ImageView floating5strongergradient,
      @NonNull ImageView floating5strongergradient2, @NonNull ImageView floating5whitebase,
      @NonNull ImageView floating5whitebase2,
      @NonNull ThemedLocationContainerView locationContainer, @NonNull ImageView logoImageView,
      @NonNull View mapClickInterceptor, @NonNull MapView mapView,
      @NonNull ComposeView postButtonComposeView, @NonNull ComposeView postButtonComposeView2,
      @NonNull ImageView searchBackButton, @NonNull ImageView searchClearButton,
      @NonNull LinearLayout searchContainer, @NonNull EditText searchEditText,
      @NonNull RecyclerView searchResultsRecyclerView) {
    this.rootView = rootView;
    this.defaultViewContainer = defaultViewContainer;
    this.floating5leftarrow = floating5leftarrow;
    this.floating5rightarrow = floating5rightarrow;
    this.floating5strongergradient = floating5strongergradient;
    this.floating5strongergradient2 = floating5strongergradient2;
    this.floating5whitebase = floating5whitebase;
    this.floating5whitebase2 = floating5whitebase2;
    this.locationContainer = locationContainer;
    this.logoImageView = logoImageView;
    this.mapClickInterceptor = mapClickInterceptor;
    this.mapView = mapView;
    this.postButtonComposeView = postButtonComposeView;
    this.postButtonComposeView2 = postButtonComposeView2;
    this.searchBackButton = searchBackButton;
    this.searchClearButton = searchClearButton;
    this.searchContainer = searchContainer;
    this.searchEditText = searchEditText;
    this.searchResultsRecyclerView = searchResultsRecyclerView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.defaultViewContainer;
      LinearLayout defaultViewContainer = ViewBindings.findChildViewById(rootView, id);
      if (defaultViewContainer == null) {
        break missingId;
      }

      id = R.id.floating_5leftarrow;
      ImageView floating5leftarrow = ViewBindings.findChildViewById(rootView, id);
      if (floating5leftarrow == null) {
        break missingId;
      }

      id = R.id.floating_5rightarrow;
      ImageView floating5rightarrow = ViewBindings.findChildViewById(rootView, id);
      if (floating5rightarrow == null) {
        break missingId;
      }

      id = R.id.floating_5strongergradient;
      ImageView floating5strongergradient = ViewBindings.findChildViewById(rootView, id);
      if (floating5strongergradient == null) {
        break missingId;
      }

      id = R.id.floating_5strongergradient_2;
      ImageView floating5strongergradient2 = ViewBindings.findChildViewById(rootView, id);
      if (floating5strongergradient2 == null) {
        break missingId;
      }

      id = R.id.floating_5whitebase;
      ImageView floating5whitebase = ViewBindings.findChildViewById(rootView, id);
      if (floating5whitebase == null) {
        break missingId;
      }

      id = R.id.floating_5whitebase_2;
      ImageView floating5whitebase2 = ViewBindings.findChildViewById(rootView, id);
      if (floating5whitebase2 == null) {
        break missingId;
      }

      id = R.id.locationContainer;
      ThemedLocationContainerView locationContainer = ViewBindings.findChildViewById(rootView, id);
      if (locationContainer == null) {
        break missingId;
      }

      id = R.id.logoImageView;
      ImageView logoImageView = ViewBindings.findChildViewById(rootView, id);
      if (logoImageView == null) {
        break missingId;
      }

      id = R.id.mapClickInterceptor;
      View mapClickInterceptor = ViewBindings.findChildViewById(rootView, id);
      if (mapClickInterceptor == null) {
        break missingId;
      }

      id = R.id.mapView;
      MapView mapView = ViewBindings.findChildViewById(rootView, id);
      if (mapView == null) {
        break missingId;
      }

      id = R.id.postButtonComposeView;
      ComposeView postButtonComposeView = ViewBindings.findChildViewById(rootView, id);
      if (postButtonComposeView == null) {
        break missingId;
      }

      id = R.id.postButtonComposeView2;
      ComposeView postButtonComposeView2 = ViewBindings.findChildViewById(rootView, id);
      if (postButtonComposeView2 == null) {
        break missingId;
      }

      id = R.id.searchBackButton;
      ImageView searchBackButton = ViewBindings.findChildViewById(rootView, id);
      if (searchBackButton == null) {
        break missingId;
      }

      id = R.id.searchClearButton;
      ImageView searchClearButton = ViewBindings.findChildViewById(rootView, id);
      if (searchClearButton == null) {
        break missingId;
      }

      id = R.id.searchContainer;
      LinearLayout searchContainer = ViewBindings.findChildViewById(rootView, id);
      if (searchContainer == null) {
        break missingId;
      }

      id = R.id.searchEditText;
      EditText searchEditText = ViewBindings.findChildViewById(rootView, id);
      if (searchEditText == null) {
        break missingId;
      }

      id = R.id.searchResultsRecyclerView;
      RecyclerView searchResultsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (searchResultsRecyclerView == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ConstraintLayout) rootView, defaultViewContainer,
          floating5leftarrow, floating5rightarrow, floating5strongergradient,
          floating5strongergradient2, floating5whitebase, floating5whitebase2, locationContainer,
          logoImageView, mapClickInterceptor, mapView, postButtonComposeView,
          postButtonComposeView2, searchBackButton, searchClearButton, searchContainer,
          searchEditText, searchResultsRecyclerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
